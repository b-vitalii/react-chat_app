{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","href","onClick","localStorage","clear","window","location","title","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","setItem","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3556dc4.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\r\n  if (message.attachments && message.attachments.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachment\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: \"18px\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3B2A50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;\r\n","const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n        />\r\n      )}\r\n      {message.attachments && message.attachments.length > 0\r\n        ? (\r\n          <img\r\n            src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n          />\r\n        )\r\n        : (\r\n          <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;\r\n","import { useState } from \"react\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n      \r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n\r\n","import MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\nimport MessageForm from \"./MessageForm\";\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  // console.log(props)\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) =>\r\n    chat.people.map(\r\n      (person, index) =>\r\n        person.last_read === message.id && (\r\n          <div\r\n            key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n              float: isMyMessage ? \"right\" : \"left\",\r\n              backgroundImage:\r\n                person.person.avatar && `url(${person.person.avatar})`,\r\n            }}\r\n          />\r\n        )\r\n    );\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      \r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage ? (\r\n              <MyMessage message={message} />\r\n            ) : (\r\n              <TheirMessage\r\n                message={message}\r\n                lastMessage={messages[lastMessageKey]}\r\n              />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"read-receipts\"\r\n            style={{\r\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n            }}\r\n          >\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div>\r\n          <button className=\"logout_button\">\r\n            <a className=\"ref\" href=\"/\" onClick={() => {\r\n                localStorage.clear();\r\n                window.location.href = '/';\r\n              }\r\n            } >LOGOUT FROM CHAT</a>\r\n          </button>\r\n        </div>\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: \"100px\" }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst projectID = \"c1bc8733-931b-44ff-b15f-3b301b45c925\";\r\n\r\nconst Modal = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = {\r\n      \"Project-ID\": projectID,\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password,\r\n    };\r\n\r\n    try {\r\n      await axios.get(\"https://api.chatengine.io/chats\", {\r\n        headers: authObject,\r\n      });\r\n\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n\r\n      window.location.reload();\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"Sorry, you put incorrect data.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">SkyUp Chat</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>start skyup chat</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1 className=\"err_title\">{error}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport './App.css';\r\n\r\nconst projectID = 'c1bc8733-931b-44ff-b15f-3b301b45c925';\r\n\r\nconst App = () => {\r\n  if (!localStorage.getItem('username')) return <LoginForm />;\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID={projectID}\r\n      userName={localStorage.getItem('username')}\r\n      userSecret={localStorage.getItem('password')}\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}